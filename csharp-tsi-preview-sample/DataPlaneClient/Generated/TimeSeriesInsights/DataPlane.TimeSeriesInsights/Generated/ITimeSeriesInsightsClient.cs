// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.TimeSeriesInsights
{
    using Microsoft.Rest;
    using Models;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Time Series Insights environment data plane client for PAYG (Preview L1
    /// SKU) environments.
    /// </summary>
    public partial interface ITimeSeriesInsightsClient : System.IDisposable
    {
        /// <summary>
        /// The base URI of the service.
        /// </summary>

        /// <summary>
        /// Gets or sets json serialization settings.
        /// </summary>
        JsonSerializerSettings SerializationSettings { get; }

        /// <summary>
        /// Gets or sets json deserialization settings.
        /// </summary>
        JsonSerializerSettings DeserializationSettings { get; }

        /// <summary>
        /// Version of the API to be used with the client request. Currently
        /// supported version is "2018-11-01-preview".
        /// </summary>
        string ApiVersion { get; set; }

        /// <summary>
        /// Per environment FQDN, for example
        /// 10000000-0000-0000-0000-100000000109.env.timeseries.azure.com. You
        /// can obtain this domain name from the response of the Get
        /// Environments API, Azure portal, or Azure Resource Manager.
        /// </summary>
        string EnvironmentFqdn { get; set; }

        /// <summary>
        /// Subscription credentials which uniquely identify client
        /// subscription.
        /// </summary>
        ServiceClientCredentials Credentials { get; }


        /// <summary>
        /// Returns the time range and distribution of event count over the
        /// event timestamp ($ts). This API can be used to provide landing
        /// experience of navigating to the environment.
        /// </summary>
        /// <param name='clientRequestId'>
        /// Optional client request ID. Service records this value. Allows the
        /// service to trace operation across services, and allows the customer
        /// to contact support support regarding a particular request.
        /// </param>
        /// <param name='clientSessionId'>
        /// Optional client session ID. Service records this value. Allows the
        /// service to trace a group of related operations across services, and
        /// allows the customer to contact support support regarding a
        /// particular group of requests.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<AvailabilityResponse,GetAvailabilityHeaders>> GetAvailabilityWithHttpMessagesAsync(string clientRequestId = default(string), string clientSessionId = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Returns environment event schema for a given search span. Event
        /// schema is a set of property definitions. Event schema may not be
        /// contain all persisted properties when there are too many
        /// properties.
        /// </summary>
        /// <param name='parameters'>
        /// Parameters to get event schema.
        /// </param>
        /// <param name='clientRequestId'>
        /// Optional client request ID. Service records this value. Allows the
        /// service to trace operation across services, and allows the customer
        /// to contact support support regarding a particular request.
        /// </param>
        /// <param name='clientSessionId'>
        /// Optional client session ID. Service records this value. Allows the
        /// service to trace a group of related operations across services, and
        /// allows the customer to contact support support regarding a
        /// particular group of requests.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<EventSchema,GetEventSchemaHeaders>> GetEventSchemaWithHttpMessagesAsync(GetEventSchemaRequest parameters, string clientRequestId = default(string), string clientSessionId = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Returns the model settings which includes model display name, Time
        /// Series ID properties and default type ID. Every pay-as-you-go
        /// environment has a model that is automatically created.
        /// </summary>
        /// <param name='clientRequestId'>
        /// Optional client request ID. Service records this value. Allows the
        /// service to trace operation across services, and allows the customer
        /// to contact support support regarding a particular request.
        /// </param>
        /// <param name='clientSessionId'>
        /// Optional client session ID. Service records this value. Allows the
        /// service to trace a group of related operations across services, and
        /// allows the customer to contact support support regarding a
        /// particular group of requests.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<ModelSettingsResponse,GetModelSettingsHeaders>> GetModelSettingsWithHttpMessagesAsync(string clientRequestId = default(string), string clientSessionId = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Updates time series model settings - either the model name or
        /// default type ID.
        /// </summary>
        /// <param name='parameters'>
        /// Model settings update request body.
        /// </param>
        /// <param name='clientRequestId'>
        /// Optional client request ID. Service records this value. Allows the
        /// service to trace operation across services, and allows the customer
        /// to contact support support regarding a particular request.
        /// </param>
        /// <param name='clientSessionId'>
        /// Optional client session ID. Service records this value. Allows the
        /// service to trace a group of related operations across services, and
        /// allows the customer to contact support support regarding a
        /// particular group of requests.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<ModelSettingsResponse,UpdateModelSettingsHeaders>> UpdateModelSettingsWithHttpMessagesAsync(UpdateModelSettingsRequest parameters, string clientRequestId = default(string), string clientSessionId = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Executes Time Series Query in pages of results - Get Events, Get
        /// Series or Aggregate Series.
        /// </summary>
        /// <param name='parameters'>
        /// Time series query request body.
        /// </param>
        /// <param name='continuationToken'>
        /// Continuation token from previous page of results to retrieve the
        /// next page of the results in calls that support pagination. To get
        /// the first page results, specify null continuation token as
        /// parameter value. Returned continuation token is null if all results
        /// have been returned, and there is no next page of results.
        /// </param>
        /// <param name='clientRequestId'>
        /// Optional client request ID. Service records this value. Allows the
        /// service to trace operation across services, and allows the customer
        /// to contact support support regarding a particular request.
        /// </param>
        /// <param name='clientSessionId'>
        /// Optional client session ID. Service records this value. Allows the
        /// service to trace a group of related operations across services, and
        /// allows the customer to contact support support regarding a
        /// particular group of requests.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<QueryResultPage,ExecuteQueryPagedHeaders>> ExecuteQueryPagedWithHttpMessagesAsync(QueryRequest parameters, string continuationToken = default(string), string clientRequestId = default(string), string clientSessionId = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Gets time series instances in pages.
        /// </summary>
        /// <param name='continuationToken'>
        /// Continuation token from previous page of results to retrieve the
        /// next page of the results in calls that support pagination. To get
        /// the first page results, specify null continuation token as
        /// parameter value. Returned continuation token is null if all results
        /// have been returned, and there is no next page of results.
        /// </param>
        /// <param name='clientRequestId'>
        /// Optional client request ID. Service records this value. Allows the
        /// service to trace operation across services, and allows the customer
        /// to contact support support regarding a particular request.
        /// </param>
        /// <param name='clientSessionId'>
        /// Optional client session ID. Service records this value. Allows the
        /// service to trace a group of related operations across services, and
        /// allows the customer to contact support support regarding a
        /// particular group of requests.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<GetInstancesPage,GetInstancesPagedHeaders>> GetInstancesPagedWithHttpMessagesAsync(string continuationToken = default(string), string clientRequestId = default(string), string clientSessionId = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Executes a batch get, create, update, delete operation on multiple
        /// time series instances.
        /// </summary>
        /// <param name='parameters'>
        /// Time series instances suggest request body.
        /// </param>
        /// <param name='clientRequestId'>
        /// Optional client request ID. Service records this value. Allows the
        /// service to trace operation across services, and allows the customer
        /// to contact support support regarding a particular request.
        /// </param>
        /// <param name='clientSessionId'>
        /// Optional client session ID. Service records this value. Allows the
        /// service to trace a group of related operations across services, and
        /// allows the customer to contact support support regarding a
        /// particular group of requests.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<InstancesBatchResponse,ExecuteInstancesBatchOperationHeaders>> ExecuteInstancesBatchOperationWithHttpMessagesAsync(InstancesBatchRequest parameters, string clientRequestId = default(string), string clientSessionId = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Suggests keywords based on time series instance attributes to be
        /// later used in Search Instances.
        /// </summary>
        /// <param name='parameters'>
        /// Time series instances suggest request body.
        /// </param>
        /// <param name='clientRequestId'>
        /// Optional client request ID. Service records this value. Allows the
        /// service to trace operation across services, and allows the customer
        /// to contact support support regarding a particular request.
        /// </param>
        /// <param name='clientSessionId'>
        /// Optional client session ID. Service records this value. Allows the
        /// service to trace a group of related operations across services, and
        /// allows the customer to contact support support regarding a
        /// particular group of requests.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<InstancesSuggestResponse,SuggestInstancesHeaders>> SuggestInstancesWithHttpMessagesAsync(InstancesSuggestRequest parameters, string clientRequestId = default(string), string clientSessionId = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Partial list of hits on search for time series instances based on
        /// instance attributes.
        /// </summary>
        /// <param name='parameters'>
        /// Time series instances search request body.
        /// </param>
        /// <param name='continuationToken'>
        /// Continuation token from previous page of results to retrieve the
        /// next page of the results in calls that support pagination. To get
        /// the first page results, specify null continuation token as
        /// parameter value. Returned continuation token is null if all results
        /// have been returned, and there is no next page of results.
        /// </param>
        /// <param name='clientRequestId'>
        /// Optional client request ID. Service records this value. Allows the
        /// service to trace operation across services, and allows the customer
        /// to contact support support regarding a particular request.
        /// </param>
        /// <param name='clientSessionId'>
        /// Optional client session ID. Service records this value. Allows the
        /// service to trace a group of related operations across services, and
        /// allows the customer to contact support support regarding a
        /// particular group of requests.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<InstancesSearchResponsePage,SearchInstancesPagedHeaders>> SearchInstancesPagedWithHttpMessagesAsync(InstancesSearchRequest parameters, string continuationToken = default(string), string clientRequestId = default(string), string clientSessionId = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Gets time series types in pages.
        /// </summary>
        /// <param name='continuationToken'>
        /// Continuation token from previous page of results to retrieve the
        /// next page of the results in calls that support pagination. To get
        /// the first page results, specify null continuation token as
        /// parameter value. Returned continuation token is null if all results
        /// have been returned, and there is no next page of results.
        /// </param>
        /// <param name='clientRequestId'>
        /// Optional client request ID. Service records this value. Allows the
        /// service to trace operation across services, and allows the customer
        /// to contact support support regarding a particular request.
        /// </param>
        /// <param name='clientSessionId'>
        /// Optional client session ID. Service records this value. Allows the
        /// service to trace a group of related operations across services, and
        /// allows the customer to contact support support regarding a
        /// particular group of requests.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<GetTypesPage,GetTypesPagedHeaders>> GetTypesPagedWithHttpMessagesAsync(string continuationToken = default(string), string clientRequestId = default(string), string clientSessionId = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Executes a batch get, create, update, delete operation on multiple
        /// time series types.
        /// </summary>
        /// <param name='parameters'>
        /// Time series types batch request body.
        /// </param>
        /// <param name='clientRequestId'>
        /// Optional client request ID. Service records this value. Allows the
        /// service to trace operation across services, and allows the customer
        /// to contact support support regarding a particular request.
        /// </param>
        /// <param name='clientSessionId'>
        /// Optional client session ID. Service records this value. Allows the
        /// service to trace a group of related operations across services, and
        /// allows the customer to contact support support regarding a
        /// particular group of requests.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<TypesBatchResponse,ExecuteTypesBatchOperationHeaders>> ExecuteTypesBatchOperationWithHttpMessagesAsync(TypesBatchRequest parameters, string clientRequestId = default(string), string clientSessionId = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Returns time series hierarchies definitions in pages.
        /// </summary>
        /// <param name='continuationToken'>
        /// Continuation token from previous page of results to retrieve the
        /// next page of the results in calls that support pagination. To get
        /// the first page results, specify null continuation token as
        /// parameter value. Returned continuation token is null if all results
        /// have been returned, and there is no next page of results.
        /// </param>
        /// <param name='clientRequestId'>
        /// Optional client request ID. Service records this value. Allows the
        /// service to trace operation across services, and allows the customer
        /// to contact support support regarding a particular request.
        /// </param>
        /// <param name='clientSessionId'>
        /// Optional client session ID. Service records this value. Allows the
        /// service to trace a group of related operations across services, and
        /// allows the customer to contact support support regarding a
        /// particular group of requests.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<GetHierarchiesPage,GetHierarchiesPagedHeaders>> GetHierarchiesPagedWithHttpMessagesAsync(string continuationToken = default(string), string clientRequestId = default(string), string clientSessionId = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Executes a batch get, create, update, delete operation on multiple
        /// time series hierarchy definitions.
        /// </summary>
        /// <param name='parameters'>
        /// Time series hierarchies batch request body.
        /// </param>
        /// <param name='clientRequestId'>
        /// Optional client request ID. Service records this value. Allows the
        /// service to trace operation across services, and allows the customer
        /// to contact support support regarding a particular request.
        /// </param>
        /// <param name='clientSessionId'>
        /// Optional client session ID. Service records this value. Allows the
        /// service to trace a group of related operations across services, and
        /// allows the customer to contact support support regarding a
        /// particular group of requests.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<HierarchiesBatchResponse,ExecuteHierarchiesBatchOperationHeaders>> ExecuteHierarchiesBatchOperationWithHttpMessagesAsync(HierarchiesBatchRequest parameters, string clientRequestId = default(string), string clientSessionId = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

    }
}
